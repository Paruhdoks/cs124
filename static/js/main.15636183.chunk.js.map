{"version":3,"sources":["reportWebVitals.js","icons/edit-icon.png","icons/delete-icon.png","Task.js","TaskList.js","Header.js","icons/delete-completed-icon.png","icons/add-icon.png","icons/view-all.png","icons/view-incomplete.png","Footer.js","icons/x-icon.png","Alert.js","DeleteAllAlert.js","DeleteTaskAlert.js","App.js","InMemoryApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Task","props","nameInput","useRef","useEffect","edited","current","focus","htmlFor","id","type","name","onChange","clickHandler","checked","completed","className","ref","value","e","editTaskName","target","onBlur","resetEditedItem","src","editIcon","alt","width","height","onClick","setEditedItem","deleteIcon","deleteTask","TaskList","tasks","onlyIncomplete","filter","task","taskDivs","map","toggleTaskAsComplete","key","editedItem","newValue","setEdit","length","Header","title","Footer","imgSize","deleteAllCompleted","deleteCompletedIcon","addTask","addIcon","setOnlyIncomplete","viewAllIcon","viewIncompleteIcon","Alert","children","xIcon","onClose","onOK","DeleteAllAlert","DeleteTaskAlert","App","useState","deleteAllAlert","setDeleteAllAlert","deleteTaskAlert","setDeleteTaskAlert","onItemChanged","onItemAdded","onItemsDeleted","InMemoryApp","taskData","setTaskData","taskId","property","generateUniqueID","ids","includes","initialData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15636183.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/edit-icon.7c5f10b5.png\";","export default __webpack_public_path__ + \"static/media/delete-icon.055df34c.png\";","import './Task.css';\nimport {useEffect, useRef} from \"react\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport editIcon from \"./icons/edit-icon.png\";\nimport deleteIcon from \"./icons/delete-icon.png\";\n\nexport function Task(props) {\n    const nameInput = useRef(null);\n    useEffect(()=>{\n        if (props.edited) {\n            nameInput.current.focus();\n        }\n    },[props.edited])\n    return <li>\n        <label htmlFor={props.id}>\n            <input type=\"checkbox\" id={props.id} name={props.id} onChange={props.clickHandler}\n                   checked={props.completed}/>\n            <div className=\"checkbox\"></div>\n            {props.edited ?\n                <TextareaAutosize ref={nameInput} value={props.name}  onChange={(e) => props.editTaskName(e.target.value)} onBlur={props.resetEditedItem} /> :\n                <span className=\"label-text\">{props.name}</span>}\n        </label>\n        <div className=\"edit-delete\">\n            {props.edited ? null : <img src={editIcon} alt=\"edit item\" width=\"35px\" height=\"35px\"\n                                        onClick={function() {\n                                            props.setEditedItem();\n                                        }}/>}\n            <img src={deleteIcon} alt=\"delete item\" width=\"35px\" height=\"35px\"\n                 onClick={props.deleteTask}/>\n        </div>\n    </li>\n}","import './TaskList.css';\nimport {Task} from \"./Task\";\n\nexport function TaskList(props) {\n\n    const tasks = props.onlyIncomplete ? props.tasks.filter((task) => !task.completed) : props.tasks;\n    const taskDivs = tasks.map(task => (\n        <Task {...task} clickHandler={() => props.toggleTaskAsComplete(task.id, !task.completed)} key={task.id}\n              edited = {props.editedItem === task.id}\n              deleteTask={() => props.deleteTask(task)}\n              resetEditedItem={props.resetEditedItem}\n              editTaskName={(newValue) => props.editTaskName(task.id, newValue)} setEditedItem={() => props.setEdit(task.id)}/>\n    ));\n    return <div id={\"task-list-area\"}>\n        {tasks.length === 0 ? <div id={\"empty-list-text\"}>Hit + to add a new task!</div> :\n            <ul id={\"task-list\"}>{taskDivs}</ul>}\n    </div>\n}\n\n","import './Header.css';\n\nexport function Header(props) {\n    return <header>\n        <h1> {props.title} </h1>\n    </header>\n}","export default __webpack_public_path__ + \"static/media/delete-completed-icon.e1dafe41.png\";","export default __webpack_public_path__ + \"static/media/add-icon.3e4e9024.png\";","export default __webpack_public_path__ + \"static/media/view-all.a1c1e44f.png\";","export default __webpack_public_path__ + \"static/media/view-incomplete.9f41f095.png\";","import './Footer.css';\nimport deleteCompletedIcon from \"./icons/delete-completed-icon.png\";\nimport addIcon from \"./icons/add-icon.png\";\nimport viewAllIcon from \"./icons/view-all.png\";\nimport viewIncompleteIcon from \"./icons/view-incomplete.png\";\n\nexport function Footer(props)\n{\n    const imgSize = \"40px\";\n    return <footer>\n        <div id='delete-completed-btn' onClick={props.deleteAllCompleted}><img src={deleteCompletedIcon} alt=\"delete completed\"\n                                            width={imgSize} height={imgSize}/></div>\n        <div id='add-new-btn' onClick={props.addTask}><img src={addIcon} alt=\"Add New Task\" width={imgSize} height={imgSize}/>\n        </div>\n        <div id='show-incomplete-all-btn' onClick={()=>props.setOnlyIncomplete(!props.onlyIncomplete)}>\n            {props.onlyIncomplete ? <img src={viewAllIcon} width={\"45px\"} height={\"45px\"}\n                                        alt=\"View All\"/> : <img src={viewIncompleteIcon} width={\"45px\"} height={\"45px\"}\n                                        alt=\"View Incomplete\"/>}\n        </div>\n    </footer>\n}","export default __webpack_public_path__ + \"static/media/x-icon.5726abf3.png\";","import \"./Alert.css\";\nimport xIcon from \"./icons/x-icon.png\";\nimport deleteIcon from \"./icons/delete-icon.png\";\n\nexport function Alert(props) {\n    return <div className={\"backdrop\"}>\n        <div className=\"modal\">\n            {props.children}\n            <div className=\"alert-buttons\">\n                <img src={xIcon} alt=\"cancel\" width=\"45px\" height=\"45px\"\n                     onClick={props.onClose}/>\n                <img src={deleteIcon} alt=\"confirm delete\" width=\"45px\" height=\"45px\"\n                     onClick={() => {\n                         props.onClose();\n                         props.onOK();\n                     }}/>\n            </div>\n        </div>\n    </div>\n}","import {Alert} from \"./Alert\";\n\nexport function DeleteAllAlert(props) {\n    return (\n        <Alert onClose={props.onClose} onOK={props.onOK}>\n            <div>Are you sure you want to delete all completed tasks?\n            </div>\n        </Alert>);\n}","import {Alert} from \"./Alert\";\n\nexport function DeleteTaskAlert(props) {\n    return (\n        <Alert onClose={props.onClose} onOK={props.onOK}>\n            <div>Are you sure you want to delete \"{props.name}\"?\n            </div>\n        </Alert>);\n}","import \"./App.css\";\nimport {TaskList} from \"./TaskList\";\nimport {Header} from \"./Header\";\nimport {Footer} from \"./Footer\";\nimport {DeleteAllAlert} from \"./DeleteAllAlert\";\nimport {DeleteTaskAlert} from \"./DeleteTaskAlert\";\nimport {useState} from \"react\";\n\nfunction App(props) {\n    const [onlyIncomplete, setOnlyIncomplete] = useState(false);\n    const [editedItem, setEditedItem] = useState(null);\n    const [deleteAllAlert, setDeleteAllAlert] = useState(false);\n    const [deleteTaskAlert, setDeleteTaskAlert] = useState(null);\n\n    function deleteAllCompleted() {\n        props.onItemsDeleted(props.tasks.filter(\n            task => task.completed\n        ).map(task => task.id))\n    }\n\n    function addTask() {\n        const id = props.onItemAdded();\n        setEditedItem(id);\n    }\n\n    return (\n        <div className=\"App\">\n            <div className={\"main-app\"}>\n                <Header title={\"List of Tasks\"}/>\n                <TaskList tasks={props.tasks} onlyIncomplete={onlyIncomplete}\n                          toggleTaskAsComplete={(id, value) => props.onItemChanged(id, \"completed\", value)}\n                          deleteTask={(task) => setDeleteTaskAlert(task)}\n                          editTaskName={(id, value) => props.onItemChanged(id, \"name\", value)} setEdit={setEditedItem}\n                          editedItem={editedItem} resetEditedItem={() => setEditedItem(null)}></TaskList>\n                <Footer onlyIncomplete={onlyIncomplete} setOnlyIncomplete={setOnlyIncomplete}\n                        deleteAllCompleted={() => setDeleteAllAlert(!deleteAllAlert)} addTask={addTask}/>\n            </div>\n            {deleteAllAlert && <DeleteAllAlert onClose={() => setDeleteAllAlert(false)} onOK={deleteAllCompleted}/>}\n            {\n                deleteTaskAlert && <DeleteTaskAlert onClose={() => setDeleteTaskAlert(null)}\n                                                    onOK={() => props.onItemsDeleted([deleteTaskAlert.id])}\n                                                    name={deleteTaskAlert.name}></DeleteTaskAlert>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"./App.js\";\nimport {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nexport function InMemoryApp(props) {\n    const [taskData, setTaskData] = useState(props.tasks);\n\n    function onItemChanged(taskId, property, newValue) {\n        setTaskData(taskData.map(\n            task => task.id !== taskId ? task : {...task, [property]: newValue}\n        ))\n    }\n\n    function onItemAdded() {\n        const id = generateUniqueID();\n        setTaskData([...taskData, {\n            name: \"\",\n            id: id,\n            completed: false\n        }])\n        return id;\n    }\n\n\n    function onItemsDeleted(ids) {\n        setTaskData(taskData.filter(\n            task => !(ids.includes(task.id))\n        ))\n    }\n\n    return <App tasks={taskData} onItemChanged={onItemChanged} onItemAdded={onItemAdded} onItemsDeleted={onItemsDeleted}/>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {InMemoryApp} from \"./InMemoryApp\";\n\nconst initialData = [\n    {name: \"Buy New John Grisham Book\", id: generateUniqueID(), completed: false},\n    {name: \"Call Mom\", id: generateUniqueID(), completed: false}\n]\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <InMemoryApp tasks = {initialData} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}