{"version":3,"sources":["icons/edit-icon.png","icons/edit-complete-icon.png","icons/delete-icon.png","Task.js","TaskList.js","Header.js","icons/delete-completed-icon.png","icons/add-icon.png","icons/view-all.png","icons/view-incomplete.png","Footer.js","icons/x-icon.png","icons/check-icon.png","Alert.js","DeleteAlert.js","DeleteAllAlert.js","DeleteTaskAlert.js","icons/share-icon.png","CollectionsRow.js","ChangeCollectionAlert.js","icons/sort-icon.png","icons/sort-complete-icon.png","SortBar.js","icons/person-icon.png","LogoutBar.js","App.js","FirestoreApp.js","AuthApp.js","index.js"],"names":["Task","props","nameInput","useRef","useEffect","edited","current","focus","scrollIntoView","className","tabIndex","name","priority","completed","htmlFor","id","type","onChange","clickHandler","checked","onKeyUp","e","keyCode","value","ref","editTaskName","target","onClick","resetEditedItem","setEditedItem","src","editCompleteIcon","editIcon","alt","width","height","deleteTask","deleteIcon","map","number","editPriority","TaskList","tasks","onlyIncomplete","filter","task","taskDivs","toggleTaskAsComplete","key","editedItem","newValue","setEdit","length","Header","title","Footer","imgSize","deleteAllCompleted","deleteCompletedIcon","addTask","addIcon","setOnlyIncomplete","viewAllIcon","viewIncompleteIcon","Alert","firstRef","lastRef","modalClassName","onKeyDown","shiftKey","stopPropagation","preventDefault","setTimeout","children","onClose","xIcon","middleIcon","middleIconOnClick","onOK","deleteAlert","doneIcon","DeleteAlert","DeleteAllAlert","completedTasksNumber","tasksNumber","DeleteTaskAlert","CollectionsRow","useState","email","setEmail","shared","setShared","emailInput","setSelectedCollection","selected","shareIcon","onDelete","onKeyPress","blur","onBlur","onShared","ChangeCollectionAlert","collection","selectedCollection","newName","setNewName","setEdited","collections","c","onCollectionShared","onCollectionsDeleted","onCollectionsAdded","SortBar","sorting","setSorting","sortOptions","sortString","sortDirection","setSortOptions","s","sortCompleteIcon","sortIcon","LogoutBar","logOut","userIcon","App","isDesktopOrLaptop","useMediaQuery","query","isTabletOrMobile","deleteAllAlert","setDeleteAllAlert","deleteTaskAlert","setDeleteTaskAlert","changeCollectionAlert","setChangeCollectionAlert","footer","onItemAdded","onItemChanged","onItemsDeleted","setCollection","FirestoreApp","collectionsQuery","db","where","user","useCollection","collectionsSnapshot","orderBy","loading","a","doc","delete","taskData","docs","data","taskId","property","update","generateUniqueID","set","created","firebase","database","ServerValue","TIMESTAMP","ids","col","forEach","owner","uid","qSnapshot","push","getCollections","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","AuthApp","useAuthState","error","password","setPassword","signOut","message","SignIn","SignUp","useSignInWithEmailAndPassword","signInWithEmailAndPassword","userCredential","useCreateUserWithEmailAndPassword","setE","createUserWithEmailAndPassword","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ba7d123.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/edit-icon.7c5f10b5.png\";","export default __webpack_public_path__ + \"static/media/edit-complete-icon.2ab64857.png\";","export default __webpack_public_path__ + \"static/media/delete-icon.055df34c.png\";","import './Task.css';\nimport {useEffect, useRef} from \"react\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport editIcon from \"./icons/edit-icon.png\";\nimport editCompleteIcon from \"./icons/edit-complete-icon.png\";\nimport deleteIcon from \"./icons/delete-icon.png\";\n\nexport function Task(props) {\n    const nameInput = useRef(null);\n    useEffect(() => {\n        if (props.edited) {\n            nameInput.current.focus();\n            nameInput.current.scrollIntoView();\n        }\n    }, [props.edited])\n    return <li>\n        <div className={\"task-row\"} tabIndex={0} aria-label={\"Task,\" + props.name + \"; Priority Level,\" + props.priority + (props.completed ? \"; Completed\" : \"; Incomplete\")}>\n            <label htmlFor={props.id}>\n                <input type=\"checkbox\" id={props.id} name={props.id} onChange={props.clickHandler}\n                       checked={props.completed}/>\n                <div htmlFor={props.id} className={\"checkbox priority-\" + props.priority} tabIndex={0}\n                       onKeyUp={(e) => {if (e.keyCode === 32) {\n                           props.clickHandler();\n                       }}}\n                ></div>\n                {props.edited ?\n                    <TextareaAutosize value={props.name} ref={nameInput} aria-label={\"Rename Task; Current name, \" + props.name}\n                                      onChange={(e) => props.editTaskName(e.target.value)}/> :\n                    <span className=\"label-text\" aria-label={\"Task name, \" + props.name + \"; checkbox\"}>{props.name}</span>}\n            </label>\n            <div className=\"edit-delete\">\n                {<button onClick={function () {\n                    if (props.edited) {\n                        props.resetEditedItem()\n                    } else {\n                        props.setEditedItem()\n                    }\n                }} aria-label={props.edited ? \"Stop editing task\" : \"Edit task\"}><img src={props.edited ? editCompleteIcon : editIcon} alt=\"edit item\" width=\"35px\" height=\"35px\"/></button>}\n                <button onClick={props.deleteTask}><img src={deleteIcon} alt=\"delete item\" width=\"35px\"\n                                                        height=\"35px\" aria-label={\"Delete task,\" + props.name}\n                /></button>\n            </div>\n        </div>\n        {props.edited ? <div className={\"priority-select\"}>\n            <span className={\"priority-label\"}>Priority: </span>\n            {[1, 2, 3].map((number) => <span key={number} className={\"priority-box priority-\" + number} aria-label={(props.priority !== number ? \"Change priority level to, \" + number + \" ;\": \"\" ) + \"Current priority level, \" + props.priority}\n                                             tabIndex={0}\n                                             onKeyUp={(e) => {if (e.keyCode === 32) {\n                                                 props.editPriority(number);\n                                             }}}\n                                             onClick={() => props.editPriority(number)}/>)}\n        </div> : null}\n    </li>\n}","import './TaskList.css';\nimport {Task} from \"./Task\";\n\nexport function TaskList(props) {\n\n    if (typeof  props.tasks === \"boolean\") {\n        return <div id={\"task-list-area\"}><div id={\"empty-list-text\"}>Loading ...</div></div>\n    };\n    const tasks = props.onlyIncomplete ? props.tasks.filter((task) => !task.completed) : props.tasks;\n    const taskDivs = tasks.map(task => (\n        <Task {...task} clickHandler={() => props.toggleTaskAsComplete(task.id, !task.completed)} key={task.id}\n              edited = {props.editedItem === task.id}\n              deleteTask={() => props.deleteTask(task)}\n              resetEditedItem={props.resetEditedItem}\n              editPriority={(newValue) => props.editPriority(task.id, newValue)}\n              editTaskName={(newValue) => props.editTaskName(task.id, newValue)} setEditedItem={() => props.setEdit(task.id)}/>\n    ));\n    return <div id={\"task-list-area\"} tabIndex={0}>\n        { tasks.length === 0 ? <div id={\"empty-list-text\"}>Hit + to add a new task!</div> :\n            <ul id={\"task-list\"}>{taskDivs}</ul>}\n    </div>\n}\n\n","import './Header.css';\n\nexport function Header(props) {\n    return <header>\n        <button onClick={props.onClick} tabIndex={0} aria-label={\"Current List, \" + props.title + \"; Open Change List Menu\"}><h1> {props.title} <span id=\n        \"header-triangle\">▼</span> </h1></button>\n    </header>\n}","export default __webpack_public_path__ + \"static/media/delete-completed-icon.e1dafe41.png\";","export default __webpack_public_path__ + \"static/media/add-icon.3e4e9024.png\";","export default __webpack_public_path__ + \"static/media/view-all.a1c1e44f.png\";","export default __webpack_public_path__ + \"static/media/view-incomplete.9f41f095.png\";","import './Footer.css';\nimport deleteCompletedIcon from \"./icons/delete-completed-icon.png\";\nimport addIcon from \"./icons/add-icon.png\";\nimport viewAllIcon from \"./icons/view-all.png\";\nimport viewIncompleteIcon from \"./icons/view-incomplete.png\";\nimport {useRef} from \"react\";\n\nexport function Footer(props)\n{\n    const imgSize = \"40px\";\n    return <footer tabIndex={0}>\n        <button id='delete-completed-btn' onClick={props.deleteAllCompleted} aria-label={\"Delete all completed tasks\"}><img src={deleteCompletedIcon} alt=\"delete completed\"\n                                            width={imgSize} height={imgSize}/></button>\n        <button id='add-new-btn' tabIndex={0} onClick={props.addTask} aria-label={\"Add new task\"}><img src={addIcon} alt=\"Add New Task\" width={imgSize} height={imgSize}/>\n        </button>\n        <button id='show-incomplete-all-btn' tabIndex={0}\n                onClick={()=>props.setOnlyIncomplete(!props.onlyIncomplete)} aria-label={props.onlyIncomplete ? \"Currently viewing, only incomplete tasks; View all tasks\" : \"Currently viewing, all tasks; View only incomplete tasks\"}>\n            {props.onlyIncomplete ? <img src={viewAllIcon} width={\"45px\"} height={\"45px\"}\n                                        alt=\"View All\"/> : <img src={viewIncompleteIcon} width={\"45px\"} height={\"45px\"}\n                                        alt=\"View Incomplete\"/>}\n        </button>\n    </footer>\n}","export default __webpack_public_path__ + \"static/media/x-icon.5726abf3.png\";","export default __webpack_public_path__ + \"static/media/check-icon.22fa9d5c.png\";","import xIcon from \"./icons/x-icon.png\";\nimport doneIcon from \"./icons/check-icon.png\";\nimport deleteIcon from \"./icons/delete-icon.png\";\nimport \"./Alert.css\";\nimport {useEffect, useRef} from \"react\";\n\nexport function Alert(props) {\n    const firstRef = useRef();\n    const lastRef = useRef();\n    useEffect(() => firstRef.current.focus(), []);\n\n    return <div className={\"backdrop\"} tabIndex={-1}>\n        <div className={props.modalClassName} tabIndex={1} ref={firstRef} id={\"collection-modal\"}\n             onKeyDown={e => {\n                 if (e.key === \"Tab\" && e.shiftKey && e.target.id === \"collection-modal\") {\n                     e.stopPropagation();\n                     e.preventDefault();\n                     setTimeout(() => {\n                         if (lastRef.current) {\n                             lastRef.current.focus();\n                         }\n                     }, 0);\n                 }\n             }}>\n            {props.children}\n            <div className=\"alert-buttons\">\n                <button onClick={props.onClose} tabIndex={1}><img src={xIcon} alt=\"cancel\"\n                                                                                       width=\"45px\" height=\"45px\" aria-label={\"Close Pop-up\"}\n                /></button>\n                {props.middleIcon && <button tabIndex={1} onClick={props.middleIconOnClick} aria-label={\"Add new list\"}>{props.middleIcon}</button>}\n                <button tabIndex={1}\n                        ref={lastRef}\n                        aria-label={\"Confirm\"}\n                        onClick ={() => {\n                            props.onClose();\n                            props.onOK();\n                        }}\n                        onKeyDown={e => {\n                            if (e.key === \"Tab\" && !e.shiftKey) {\n                                setTimeout(() => {\n                                    if (firstRef.current) {\n                                        firstRef.current.focus();\n                                    }\n                                }, 0);\n                            }\n                        }}\n                ><img src={props.deleteAlert ? deleteIcon : doneIcon} alt=\"confirm delete\" width=\"45px\" height=\"45px\"\n                /></button>\n            </div>\n        </div>\n    </div>\n}","import \"./DeleteAlert.css\";\nimport {Alert} from \"./Alert\";\n\nexport function DeleteAlert(props) {\n    return <Alert modalClassName=\"delete-modal\" onClose={props.onClose} onOK={props.onOK}\n                  deleteAlert={true}>{props.children}</Alert>\n}","import {DeleteAlert} from \"./DeleteAlert\";\n\nexport function DeleteAllAlert(props) {\n    return (\n        <DeleteAlert onClose={props.onClose} onOK={props.onOK}>\n            <div>{`Are you sure you want to delete all ${props.completedTasksNumber}/${props.tasksNumber} completed tasks?`}\n            </div>\n        </DeleteAlert>);\n}","import {DeleteAlert} from \"./DeleteAlert\";\n\nexport function DeleteTaskAlert(props) {\n    return (\n        <DeleteAlert onClose={props.onClose} onOK={props.onOK}>\n            <div><span>Are you sure you want to delete </span><span className={\"task-name\"}>{props.name}</span><span>?</span>\n            </div>\n        </DeleteAlert>);\n}","export default __webpack_public_path__ + \"static/media/share-icon.24d01bbd.png\";","import deleteIcon from \"./icons/delete-icon.png\";\nimport shareIcon from \"./icons/share-icon.png\";\nimport \"./CollectionsRow.css\";\nimport {useState, useEffect, useRef} from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nexport function CollectionsRow(props) {\n    let [email, setEmail] = useState(\"\");\n    let [shared, setShared] = useState(false);\n    const emailInput = useRef(null);\n\n    useEffect(() => {\n        if (shared) {\n            emailInput.current.focus();\n            emailInput.current.scrollIntoView();\n        }\n    }, [shared])\n\n    return <li key={props.name}\n    >\n        <div className=\"collection-row\">\n        <button tabIndex={1} onClick={() => props.setSelectedCollection(props.name)}\n                aria-label={\"List,  \" + props.name + (props.selected ? \"; Currently Selected\" : \"; Select List\")}><span\n            className={props.selected ? \"highlighted small-caps\" : \"small-caps\"}>{props.name}</span></button>\n        <div className={\"button-group\"}>\n            <button tabIndex={1} onClick={() => setShared(true)}\n                    aria-label={\"Share List\"}><img src={shareIcon}\n                                                   alt=\"share\"\n                                                   width=\"45px\"\n                                                   height=\"45px\"\n            /></button>\n            {!props.selected &&\n            <button tabIndex={1} onClick={props.onDelete} aria-label={\"Delete List, \" + props.name}><img\n                src={deleteIcon} alt=\"cancel\"\n                width=\"45px\"\n                height=\"45px\"\n            /></button>}</div></div>\n        {shared &&\n            <div className={\"email-row\"}>\n                <label>Email: </label>\n        <TextareaAutosize key={\"edit\"} value={email} ref={emailInput}\n                          onChange={(e) => setEmail(e.target.value)}\n                          onKeyPress={(e) => {\n                              if (e.key === \"Enter\") {\n                                  e.stopPropagation();\n                                  emailInput.current.blur();\n                              }\n                          }}\n                          onBlur={(e) => {\n                              setShared(false);\n                              props.onShared(email);\n                          }}\n        /></div>}\n    </li>\n}","import {Alert} from \"./Alert\";\nimport \"./ChangeCollectionAlert.css\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {CollectionsRow} from \"./CollectionsRow\";\nimport addIcon from \"./icons/add-icon.png\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nexport function ChangeCollectionAlert(props) {\n    // store as state so not reloading list in background when choosing\n    let [selectedCollection, setSelectedCollection] = useState(props.collection);\n    let [newName, setNewName] = useState(\"\");\n    let [edited, setEdited] = useState(false);\n    const nameInput = useRef(null);\n\n    useEffect(() => {\n        if (edited) {\n            nameInput.current.focus();\n            nameInput.current.scrollIntoView();\n        }\n    }, [edited])\n\n    return (\n\n        <Alert onClose={props.onClose} onOK={() => props.onOK(selectedCollection)}\n               modalClassName=\"change-collection-modal\"\n               deleteAlert={false}\n               middleIcon={<img src={addIcon} alt=\"cancel\" width=\"45px\" height=\"45px\"/>}\n               middleIconOnClick={() => setEdited(true)}\n        >\n            <div>\n                <div className={\"center-text\"}>{`Which list would you like to view?`}</div>\n                <ul id={\"collections-list\"}>\n                    {props.collections.map((c) => <CollectionsRow key={c.name} setSelectedCollection={() => setSelectedCollection(c)}\n                                                                  onShared={(email) => props.onCollectionShared(c, email)}\n                                                                  selected={selectedCollection.id === c.id} name={c.name}\n\n                                                                  onDelete={() => props.onCollectionsDeleted(c)}/>)\n\n                    }\n                </ul>\n                {edited &&\n                <TextareaAutosize key={\"edit\"} value={newName} ref={nameInput}\n                                  onChange={(e) => setNewName(e.target.value)}\n                                  onKeyPress={(e) => {\n                                      if (e.key === \"Enter\") {\n                                          e.stopPropagation();\n                                          nameInput.current.blur();\n                                      }\n                                  }}\n                                  onBlur={(e) => {\n                                      setEdited(false);\n                                      if (newName === \"\") {\n                                          props.onCollectionsAdded(\"Untitled\");\n                                          setSelectedCollection(\"Untitled\");\n                                      } else {\n                                          props.onCollectionsAdded(newName);\n                                          setSelectedCollection(newName);\n                                      }\n\n                                  }}\n                />}\n\n            </div>\n        </Alert>);\n}\n","export default __webpack_public_path__ + \"static/media/sort-icon.79aeb5e0.png\";","export default __webpack_public_path__ + \"static/media/sort-complete-icon.9777492c.png\";","import './SortBar.css';\nimport {useState} from \"react\";\nimport sortIcon from \"./icons/sort-icon.png\";\nimport sortCompleteIcon from \"./icons/sort-complete-icon.png\";\n\nexport function SortBar(props) {\n    const [sorting, setSorting] = useState(false);\n    const [sortString, sortDirection] = props.sortOptions;\n\n    const imgSize = \"40px\";\n    return <div id={\"sort-bar\"} tabIndex={0}>\n        {sorting && <button onClick={() => props.setSortOptions([sortString, sortDirection === \"asc\" ? \"desc\": \"asc\"])} aria-label={\"Toggle Sort Direction; Current Sort direction, \" + sortDirection + \"ending\"}><div className={\"current-sort\"}>{sortDirection === \"asc\" ? \"↑\" : \"↓\"}</div></button>}\n        {sorting &&\n        [\"created\", \"name\", \"priority\"].map((s) => <button key={s} onClick={()=>props.setSortOptions([s, sortDirection])} aria-label={sortString === s ? \"Current Sort Method; Method, \" + s : \"Change Sort Method; Method, \" + s}><div id={s}\n                                                                    className={sortString === s ? \"current-sort\" : \"\"}>{s}</div></button>)}\n        <button onClick={() => setSorting(!sorting)} aria-label={sorting ? \"Close sort menu\" : \"open sort menu\"}><img src={sorting ? sortCompleteIcon : sortIcon} alt=\"sort\" width={imgSize} height={imgSize}\n            /></button>\n    </div>\n}","export default __webpack_public_path__ + \"static/media/person-icon.be761eed.png\";","import './LogoutBar.css';\nimport userIcon from \"./icons/person-icon.png\";\n\nexport function LogoutBar(props) {\n\n\n    const imgSize = \"40px\";\n    return <div id={\"logout-bar\"} tabIndex={0}>\n        <div>{props.email}</div>\n        <div id={\"logout-group\"}>\n        <label htmlFor={\"logout\"}>Logout</label>\n        <button id={\"logout\"} name={\"logout\"} onClick={props.logOut} aria-label={\"Log Out\"}><img src={userIcon} alt=\"logout\" width={imgSize} height={imgSize}\n            /></button></div>\n    </div>\n}","import {useMediaQuery} from 'react-responsive';\n\nimport \"./App.css\";\nimport {TaskList} from \"./TaskList\";\nimport {Header} from \"./Header\";\nimport {Footer} from \"./Footer\";\nimport {DeleteAllAlert} from \"./DeleteAllAlert\";\nimport {DeleteTaskAlert} from \"./DeleteTaskAlert\";\nimport {ChangeCollectionAlert} from \"./ChangeCollectionAlert\";\nimport {useState} from \"react\";\nimport {SortBar} from \"./SortBar\";\nimport {LogoutBar} from \"./LogoutBar\";\n\nfunction App(props) {\n    const isDesktopOrLaptop = useMediaQuery({\n        query: '(min-width: 1225px)'\n    })\n    const isTabletOrMobile = useMediaQuery({query: '(max-width: 1224px)'})\n\n    const [onlyIncomplete, setOnlyIncomplete] = useState(false);\n    const [editedItem, setEditedItem] = useState(null);\n    const [deleteAllAlert, setDeleteAllAlert] = useState(false);\n    const [deleteTaskAlert, setDeleteTaskAlert] = useState(null);\n    const [changeCollectionAlert, setChangeCollectionAlert] = useState(false);\n\n    function deleteAllCompleted() {\n        props.onItemsDeleted(props.tasks.filter(\n            task => task.completed\n        ).map(task => task.id))\n    }\n\n    function addTask() {\n        const id = props.onItemAdded();\n        setEditedItem(id);\n    }\n\n    const footer = <Footer onlyIncomplete={onlyIncomplete} setOnlyIncomplete={setOnlyIncomplete}\n                           deleteAllCompleted={() => setDeleteAllAlert(!deleteAllAlert)} addTask={addTask}/>;\n\n    return (\n        <div className=\"App\">\n            <div className={\"main-app\"}>\n                <LogoutBar logOut={props.logOut} email={props.email} />\n                <Header title={props.collection.name} onClick={() => setChangeCollectionAlert(true)}/>\n                {isDesktopOrLaptop && footer}\n                <SortBar sortOptions={props.sortOptions} setSortOptions={props.setSortOptions}/>\n                <TaskList tasks={props.tasks} onlyIncomplete={onlyIncomplete}\n                          toggleTaskAsComplete={(id, value) => props.onItemChanged(id, \"completed\", value)}\n                          deleteTask={(task) => setDeleteTaskAlert(task)}\n                          editPriority={(id, value) => props.onItemChanged(id, \"priority\", value)}\n                          editTaskName={(id, value) => props.onItemChanged(id, \"name\", value)} setEdit={setEditedItem}\n                          editedItem={editedItem} resetEditedItem={() => setEditedItem(null)}/>\n                {isTabletOrMobile && footer}\n            </div>\n            {deleteAllAlert && <DeleteAllAlert onClose={() => setDeleteAllAlert(false)} onOK={deleteAllCompleted}\n                                               tasksNumber={props.tasks.length}\n                                               completedTasksNumber={props.tasks.filter((task) => (task.completed)).length}/>}\n            {\n                deleteTaskAlert && <DeleteTaskAlert onClose={() => setDeleteTaskAlert(null)}\n                                                    onOK={() => props.onItemsDeleted([deleteTaskAlert.id])}\n                                                    name={deleteTaskAlert.name}/>\n            }\n            {\n                changeCollectionAlert && <ChangeCollectionAlert onClose={() => setChangeCollectionAlert(null)}\n                                                                onOK={props.setCollection} collection={props.collection}\n                                                                onCollectionsAdded={props.onCollectionsAdded}\n                                                                onCollectionsDeleted={props.onCollectionsDeleted}\n                                                                onCollectionShared={props.onCollectionShared}\n                                                                collections={props.collections}/>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"./App.js\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {useState} from \"react\";\nimport {\n    useAuthState,\n    useCreateUserWithEmailAndPassword,\n    useSignInWithEmailAndPassword\n} from 'react-firebase-hooks/auth';\n\n// Your web app's Firebase configuration\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyAqjBv9F9MnhkTPQeRghfLj06E8iJVh0lg\",\n//     authDomain: \"list-of-tasks-281cc.firebaseapp.com\",\n//     projectId: \"list-of-tasks-281cc\",\n//     storageBucket: \"list-of-tasks-281cc.appspot.com\",\n//     messagingSenderId: \"319211842925\",\n//     appId: \"1:319211842925:web:78baa57a16f2989eac3e64\"\n// };\n//\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n// constprops.db = firebase.firestore();\n// const auth = firebase.auth();\n//\n// export function AuthApp(props) {\n//     const [user, loading, error] = useAuthState(auth);\n//     if (loading) {\n//         return <p>Checking...</p>;\n//     } else if (user) {\n//         return <div>\n//             {user.displayName || user.email}\n//             <button type=\"button\" onClick={() => auth.signOut()}>Logout</button>\n//             <FirestoreApp {...props} user={user}/>\n//         </div>\n//     } else {\n//         return <>\n//             {error && <p>Error App: {error.message}</p>}\n//             <div>\n//                 <SignIn key=\"Sign In\"/>\n//                 <SignUp key=\"Sign Up\"/>\n//             </div>\n//         </>\n//     }\n// }\n//\n// const FAKE_EMAIL = 'foo1@bar.com';\n// const FAKE_PASSWORD = 'xyzzyxx';\n//\n// function SignIn() {\n//     const [\n//         signInWithEmailAndPassword,\n//         userCredential, loading, error\n//     ] = useSignInWithEmailAndPassword(auth);\n//\n//     if (userCredential) {\n//         // Shouldn't happen because App should see that\n//         // we are signed in.\n//         return <div>Unexpectedly signed in already</div>\n//     } else if (loading) {\n//         return <p>Logging in…</p>\n//     }\n//     return <div>\n//         {error && <p>\"Error logging in: \" {error.message}</p>}\n//         <button onClick={() =>\n//             signInWithEmailAndPassword(FAKE_EMAIL, FAKE_PASSWORD)}>Login with test user Email/PW\n//         </button>\n//     </div>\n// }\n//\n// function SignUp() {\n//     const [\n//         createUserWithEmailAndPassword,\n//         userCredential, loading, error\n//     ] = useCreateUserWithEmailAndPassword(auth);\n//\n//     if (userCredential) {\n//         // Shouldn't happen because App should see that\n//         // we are signed in.\n//         return <div>Unexpectedly signed in already</div>\n//     } else if (loading) {\n//         return <p>Signing up…</p>\n//     }\n//\n//     return <div>\n//         {error && <p>\"Error signing up: \" {error.message}</p>}\n//         <button onClick={async () => {\n//             const userCredential = await auth.createUserWithEmailAndPassword(FAKE_EMAIL, FAKE_PASSWORD)\n//             const id = generateUniqueID()\n//             awaitprops.db.doc(`Lists/${id}`).set(\n//                 {\n//                     id: id,\n//                     name: \"Tasks\",\n//                     owner: userCredential.user.uid,\n//                     shared: [userCredential.user.email],\n//                     tasks: []\n//                 }\n//             );\n//         }}>\n//             Create test user\n//         </button>\n//\n//     </div>\n// }\n\n\nexport function FirestoreApp(props) {\n\n    const collectionsQuery =props.db.collection(`Lists`).where(\"shared\",\"array-contains\", props.user.email);\n    const [collectionsSnapshot, loadingC, errorC] = useCollection(collectionsQuery);\n\n    const [collection, setCollection] = useState(null);\n    const [sortOptions, setSortOptions] = useState([\"priority\", \"desc\"]);\n    const [sortString, sortDirection] = sortOptions;\n\n    const query =props.db.collection(`Lists/${collection ? collection.id : \"null\"}/tasks`).orderBy(sortString, sortDirection);\n    const [value, loading, error] = useCollection(query);\n    function getCollections(qSnapshot) {\n        let collections = [];\n        if (qSnapshot) {\n            qSnapshot.docs.forEach((doc) => {collections.push(doc.data())});\n            if (collection === null) {\n                setCollection(collections[0]);\n            }\n        }\n        return collections;\n    }\n\n\n    function onCollectionsAdded(name) {\n        const id = generateUniqueID()\n        const query =props.db.doc(`Lists/${id}`).set(\n            {\n                id: id,\n                name: name,\n                owner: props.user.uid,\n                shared: [props.user.email]\n            }\n        )\n    }\n\n    function onCollectionsShared(collection, email) {\n        if (email !== \"\") {\n            const query = props.db.doc(`Lists/${collection.id}`).update(\n                {\n                    shared: [...collection.shared, email]\n                }\n            )\n        }\n    }\n\n    function onItemChanged(taskId, property, newValue) {props.db.collection(`Lists/${collection.id}/tasks`).doc(taskId).update({[property]: newValue});\n    }\n\n    function onItemAdded() {\n        const id = generateUniqueID();props.db.collection(`Lists/${collection.id}/tasks`).doc(id).set(\n            {\n                id: id,\n                name: \"\",\n                completed: false,\n                priority: 2,\n                created: firebase.database.ServerValue.TIMESTAMP\n            }\n        )\n        return id;\n    }\n\n\n    function onItemsDeleted(ids) {\n        const col =props.db.collection(`Lists/${collection.id}/tasks`);\n        ids.forEach(id => col.doc(id).delete());\n    }\n\n    async function onCollectionsDeleted(collection) {props.db.doc(`Lists/${collection.id}`).delete();\n    }\n    const taskData = loading || !value ? loading : value.docs.map((doc) => doc.data());\n\n    return <App setCollection={setCollection} collection={collection ? collection : {name: \"Loading\", id: null}} tasks={taskData} sortOptions={sortOptions}\n                setSortOptions={setSortOptions} onItemChanged={onItemChanged} onItemAdded={onItemAdded}\n                onItemsDeleted={onItemsDeleted}\n                onCollectionsAdded={onCollectionsAdded}\n                onCollectionsDeleted={onCollectionsDeleted}\n                onCollectionShared={onCollectionsShared}\n                collections={getCollections(collectionsSnapshot)}\n                logOut={props.logOut}\n                email={props.user.email}\n    />\n}\n","import {\n    useAuthState,\n    useCreateUserWithEmailAndPassword,\n    useSignInWithEmailAndPassword\n} from \"react-firebase-hooks/auth\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {FirestoreApp} from \"./FirestoreApp\";\nimport firebase from \"firebase/compat\";\nimport \"./AuthApp.css\";\nimport {useState} from \"react\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAqjBv9F9MnhkTPQeRghfLj06E8iJVh0lg\",\n    authDomain: \"list-of-tasks-281cc.firebaseapp.com\",\n    projectId: \"list-of-tasks-281cc\",\n    storageBucket: \"list-of-tasks-281cc.appspot.com\",\n    messagingSenderId: \"319211842925\",\n    appId: \"1:319211842925:web:78baa57a16f2989eac3e64\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nexport function AuthApp(props) {\n    const [user, loading, error] = useAuthState(auth);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    if (loading) {\n        return <p>Checking...</p>;\n    } else if (user) {\n        return <div className={\"AuthApp\"}>\n            <FirestoreApp {...props} user={user} db={db} logOut={() => auth.signOut()}/>\n        </div>\n    } else {\n        return <div className={\"AuthApp\"}>\n            <div className={\"login-wrapper\"}>\n            <div className={\"login-page\"}>\n                <h1 className={\"app-title\"}>List of Tasks</h1>\n            {error && <p>Error App: {error.message}</p>}\n                <div className={\"form-input\"}>\n                <label htmlFor={\"email\"} className={\"form-label\"}>Email:</label> <input className={\"login-input\"} type={\"email\"} id={\"email\"} value={email}\n                                                               onChange={(e) => setEmail(e.target.value)}></input></div>\n                <div className={\"form-input\"}><label className={\"form-label\"} htmlFor={\"password\"}>Password:</label>\n                <input type={\"password\"} id={\"password\"} value={password} className={\"login-input\"}\n                       onChange={(e) => setPassword(e.target.value)}></input></div>\n                <SignIn key=\"Sign In\" email={email} password={password}/>\n                <SignUp key=\"Sign Up\" email={email} password={password}/>\n            </div></div>\n        </div>\n    }\n}\n\nfunction SignIn(props) {\n    const [\n        signInWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useSignInWithEmailAndPassword(auth);\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Logging in…</p>\n    }\n    return <>\n        {error && <p>Error logging in: {error.message}</p>}\n        <button className={\"login-button\"} onClick={() =>\n            signInWithEmailAndPassword(props.email, props.password)}>Login\n        </button>\n    </>\n}\n\nfunction SignUp(props) {\n    const [\n        createUserWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useCreateUserWithEmailAndPassword(auth);\n    const [e, setE] = useState(null);\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Signing up…</p>\n    }\n\n    return <>\n        {error || e && <p>Error signing up: {error || e}</p>}\n        <button className={\"login-button\"} onClick={async () => {\n            try {\n                const userCredential = await auth.createUserWithEmailAndPassword(props.email,  props.password);\n                const id = generateUniqueID()\n                await db.doc(`Lists/${id}`).set(\n                    {\n                        id: id,\n                        name: \"Tasks\",\n                        owner: userCredential.user.uid,\n                        shared: [userCredential.user.email],\n                        tasks: []\n                    }\n                );\n            } catch (e) {\n                setE(e.message);\n                return;\n            }\n\n        }}>\n            Sign Up\n        </button>\n\n    </>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {AuthApp} from \"./AuthApp\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}