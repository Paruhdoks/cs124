{"version":3,"sources":["icons/edit-icon.png","icons/edit-complete-icon.png","icons/delete-icon.png","Task.js","TaskList.js","Header.js","icons/delete-completed-icon.png","icons/add-icon.png","icons/view-all.png","icons/view-incomplete.png","Footer.js","icons/x-icon.png","icons/check-icon.png","Alert.js","DeleteAlert.js","DeleteAllAlert.js","DeleteTaskAlert.js","CollectionsRow.js","ChangeCollectionAlert.js","icons/sort-icon.png","icons/sort-complete-icon.png","SortBar.js","App.js","FirestoreApp.js","index.js"],"names":["Task","props","nameInput","useRef","useEffect","edited","current","focus","scrollIntoView","className","tabIndex","name","priority","completed","htmlFor","id","type","onChange","clickHandler","checked","onKeyUp","e","keyCode","value","ref","editTaskName","target","onClick","resetEditedItem","setEditedItem","src","editCompleteIcon","editIcon","alt","width","height","deleteTask","deleteIcon","map","number","editPriority","TaskList","tasks","onlyIncomplete","filter","task","taskDivs","toggleTaskAsComplete","key","editedItem","newValue","setEdit","length","Header","title","Footer","imgSize","deleteAllCompleted","deleteCompletedIcon","addTask","addIcon","setOnlyIncomplete","viewAllIcon","viewIncompleteIcon","Alert","firstRef","lastRef","modalClassName","onKeyDown","shiftKey","stopPropagation","preventDefault","setTimeout","children","onClose","xIcon","middleIcon","middleIconOnClick","onOK","deleteAlert","doneIcon","DeleteAlert","DeleteAllAlert","completedTasksNumber","tasksNumber","DeleteTaskAlert","CollectionsRow","setSelectedCollection","selected","onDelete","ChangeCollectionAlert","useState","collection","selectedCollection","newName","setNewName","setEdited","collections","c","onCollectionsDeleted","onKeyPress","blur","onBlur","onCollectionsAdded","SortBar","sorting","setSorting","sortOptions","sortString","sortDirection","setSortOptions","s","sortCompleteIcon","sortIcon","App","isDesktopOrLaptop","useMediaQuery","query","isTabletOrMobile","deleteAllAlert","setDeleteAllAlert","deleteTaskAlert","setDeleteTaskAlert","changeCollectionAlert","setChangeCollectionAlert","footer","onItemAdded","onItemChanged","onItemsDeleted","setCollection","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","FirestoreApp","setCollections","orderBy","useCollection","loading","taskData","docs","doc","data","a","taskId","property","update","generateUniqueID","set","created","database","ServerValue","TIMESTAMP","ids","col","forEach","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d43f50b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/edit-icon.7c5f10b5.png\";","export default __webpack_public_path__ + \"static/media/edit-complete-icon.2ab64857.png\";","export default __webpack_public_path__ + \"static/media/delete-icon.055df34c.png\";","import './Task.css';\nimport {useEffect, useRef} from \"react\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport editIcon from \"./icons/edit-icon.png\";\nimport editCompleteIcon from \"./icons/edit-complete-icon.png\";\nimport deleteIcon from \"./icons/delete-icon.png\";\n\nexport function Task(props) {\n    const nameInput = useRef(null);\n    useEffect(() => {\n        if (props.edited) {\n            nameInput.current.focus();\n            nameInput.current.scrollIntoView();\n        }\n    }, [props.edited])\n    return <li>\n        <div className={\"task-row\"} tabIndex={0} aria-label={\"Task,\" + props.name + \"; Priority Level,\" + props.priority + (props.completed ? \"; Completed\" : \"; Incomplete\")}>\n            <label htmlFor={props.id}>\n                <input type=\"checkbox\" id={props.id} name={props.id} onChange={props.clickHandler}\n                       checked={props.completed}/>\n                <div htmlFor={props.id} className={\"checkbox priority-\" + props.priority} tabIndex={0}\n                       onKeyUp={(e) => {if (e.keyCode === 32) {\n                           props.clickHandler();\n                       }}}\n                ></div>\n                {props.edited ?\n                    <TextareaAutosize value={props.name} ref={nameInput} aria-label={\"Rename Task; Current name, \" + props.name}\n                                      onChange={(e) => props.editTaskName(e.target.value)}/> :\n                    <span className=\"label-text\" aria-label={\"Task name, \" + props.name + \"; checkbox\"}>{props.name}</span>}\n            </label>\n            <div className=\"edit-delete\">\n                {<button onClick={function () {\n                    if (props.edited) {\n                        props.resetEditedItem()\n                    } else {\n                        props.setEditedItem()\n                    }\n                }} aria-label={props.edited ? \"Stop editing task\" : \"Edit task\"}><img src={props.edited ? editCompleteIcon : editIcon} alt=\"edit item\" width=\"35px\" height=\"35px\"/></button>}\n                <button onClick={props.deleteTask}><img src={deleteIcon} alt=\"delete item\" width=\"35px\"\n                                                        height=\"35px\" aria-label={\"Delete task,\" + props.name}\n                /></button>\n            </div>\n        </div>\n        {props.edited ? <div className={\"priority-select\"}>\n            <span className={\"priority-label\"}>Priority: </span>\n            {[1, 2, 3].map((number) => <span key={number} className={\"priority-box priority-\" + number} aria-label={(props.priority !== number ? \"Change priority level to, \" + number + \" ;\": \"\" ) + \"Current priority level, \" + props.priority}\n                                             tabIndex={0}\n                                             onKeyUp={(e) => {if (e.keyCode === 32) {\n                                                 props.editPriority(number);\n                                             }}}\n                                             onClick={() => props.editPriority(number)}/>)}\n        </div> : null}\n    </li>\n}","import './TaskList.css';\nimport {Task} from \"./Task\";\n\nexport function TaskList(props) {\n\n    if (typeof  props.tasks === \"boolean\") {\n        return <div id={\"task-list-area\"}><div id={\"empty-list-text\"}>Loading ...</div></div>\n    };\n    const tasks = props.onlyIncomplete ? props.tasks.filter((task) => !task.completed) : props.tasks;\n    const taskDivs = tasks.map(task => (\n        <Task {...task} clickHandler={() => props.toggleTaskAsComplete(task.id, !task.completed)} key={task.id}\n              edited = {props.editedItem === task.id}\n              deleteTask={() => props.deleteTask(task)}\n              resetEditedItem={props.resetEditedItem}\n              editPriority={(newValue) => props.editPriority(task.id, newValue)}\n              editTaskName={(newValue) => props.editTaskName(task.id, newValue)} setEditedItem={() => props.setEdit(task.id)}/>\n    ));\n    return <div id={\"task-list-area\"} tabIndex={0}>\n        { tasks.length === 0 ? <div id={\"empty-list-text\"}>Hit + to add a new task!</div> :\n            <ul id={\"task-list\"}>{taskDivs}</ul>}\n    </div>\n}\n\n","import './Header.css';\n\nexport function Header(props) {\n    return <header>\n        <button onClick={props.onClick} tabIndex={0} aria-label={\"Current List, \" + props.title + \"; Open Change List Menu\"}><h1> {props.title} <span id=\n        \"header-triangle\">▼</span> </h1></button>\n    </header>\n}","export default __webpack_public_path__ + \"static/media/delete-completed-icon.e1dafe41.png\";","export default __webpack_public_path__ + \"static/media/add-icon.3e4e9024.png\";","export default __webpack_public_path__ + \"static/media/view-all.a1c1e44f.png\";","export default __webpack_public_path__ + \"static/media/view-incomplete.9f41f095.png\";","import './Footer.css';\nimport deleteCompletedIcon from \"./icons/delete-completed-icon.png\";\nimport addIcon from \"./icons/add-icon.png\";\nimport viewAllIcon from \"./icons/view-all.png\";\nimport viewIncompleteIcon from \"./icons/view-incomplete.png\";\nimport {useRef} from \"react\";\n\nexport function Footer(props)\n{\n    const imgSize = \"40px\";\n    return <footer tabIndex={0}>\n        <button id='delete-completed-btn' onClick={props.deleteAllCompleted} aria-label={\"Delete all completed tasks\"}><img src={deleteCompletedIcon} alt=\"delete completed\"\n                                            width={imgSize} height={imgSize}/></button>\n        <button id='add-new-btn' tabIndex={0} onClick={props.addTask} aria-label={\"Add new task\"}><img src={addIcon} alt=\"Add New Task\" width={imgSize} height={imgSize}/>\n        </button>\n        <button id='show-incomplete-all-btn' tabIndex={0}\n                onClick={()=>props.setOnlyIncomplete(!props.onlyIncomplete)} aria-label={props.onlyIncomplete ? \"Currently viewing, only incomplete tasks; View all tasks\" : \"Currently viewing, all tasks; View only incomplete tasks\"}>\n            {props.onlyIncomplete ? <img src={viewAllIcon} width={\"45px\"} height={\"45px\"}\n                                        alt=\"View All\"/> : <img src={viewIncompleteIcon} width={\"45px\"} height={\"45px\"}\n                                        alt=\"View Incomplete\"/>}\n        </button>\n    </footer>\n}","export default __webpack_public_path__ + \"static/media/x-icon.5726abf3.png\";","export default __webpack_public_path__ + \"static/media/check-icon.22fa9d5c.png\";","import xIcon from \"./icons/x-icon.png\";\nimport doneIcon from \"./icons/check-icon.png\";\nimport deleteIcon from \"./icons/delete-icon.png\";\nimport \"./Alert.css\";\nimport {useEffect, useRef} from \"react\";\n\nexport function Alert(props) {\n    const firstRef = useRef();\n    const lastRef = useRef();\n    useEffect(() => firstRef.current.focus(), []);\n\n    return <div className={\"backdrop\"} tabIndex={-1}>\n        <div className={props.modalClassName} tabIndex={1} ref={firstRef} id={\"collection-modal\"}\n             onKeyDown={e => {\n                 if (e.key === \"Tab\" && e.shiftKey && e.target.id === \"collection-modal\") {\n                     e.stopPropagation();\n                     e.preventDefault();\n                     setTimeout(() => {\n                         if (lastRef.current) {\n                             lastRef.current.focus();\n                         }\n                     }, 0);\n                 }\n             }}>\n            {props.children}\n            <div className=\"alert-buttons\">\n                <button onClick={props.onClose} tabIndex={1}><img src={xIcon} alt=\"cancel\"\n                                                                                       width=\"45px\" height=\"45px\" aria-label={\"Close Pop-up\"}\n                /></button>\n                {props.middleIcon && <button tabIndex={1} onClick={props.middleIconOnClick} aria-label={\"Add new list\"}>{props.middleIcon}</button>}\n                <button tabIndex={1}\n                        ref={lastRef}\n                        aria-label={\"Confirm\"}\n                        onClick ={() => {\n                            props.onClose();\n                            props.onOK();\n                        }}\n                        onKeyDown={e => {\n                            if (e.key === \"Tab\" && !e.shiftKey) {\n                                setTimeout(() => {\n                                    if (firstRef.current) {\n                                        firstRef.current.focus();\n                                    }\n                                }, 0);\n                            }\n                        }}\n                ><img src={props.deleteAlert ? deleteIcon : doneIcon} alt=\"confirm delete\" width=\"45px\" height=\"45px\"\n                /></button>\n            </div>\n        </div>\n    </div>\n}","import \"./DeleteAlert.css\";\nimport {Alert} from \"./Alert\";\n\nexport function DeleteAlert(props) {\n    return <Alert modalClassName=\"delete-modal\" onClose={props.onClose} onOK={props.onOK}\n                  deleteAlert={true}>{props.children}</Alert>\n}","import {DeleteAlert} from \"./DeleteAlert\";\n\nexport function DeleteAllAlert(props) {\n    return (\n        <DeleteAlert onClose={props.onClose} onOK={props.onOK}>\n            <div>{`Are you sure you want to delete all ${props.completedTasksNumber}/${props.tasksNumber} completed tasks?`}\n            </div>\n        </DeleteAlert>);\n}","import {DeleteAlert} from \"./DeleteAlert\";\n\nexport function DeleteTaskAlert(props) {\n    return (\n        <DeleteAlert onClose={props.onClose} onOK={props.onOK}>\n            <div><span>Are you sure you want to delete </span><span className={\"task-name\"}>{props.name}</span><span>?</span>\n            </div>\n        </DeleteAlert>);\n}","import deleteIcon from \"./icons/delete-icon.png\";\nimport \"./CollectionsRow.css\";\n\nexport function CollectionsRow(props) {\n    return <li key={props.name}\n                className=\"collection-row\"\n                >\n        <button tabIndex={1} onClick={() => props.setSelectedCollection(props.name)} aria-label={\"List,  \" + props.name + (props.selected ? \"; Currently Selected\" : \"; Select List\") }><span className={props.selected ? \"highlighted small-caps\" : \"small-caps\"}>{props.name}</span></button>\n        { !props.selected && <button tabIndex={1} onClick={props.onDelete} aria-label={\"Delete List, \" + props.name }><img src={deleteIcon} alt=\"cancel\" width=\"45px\" height=\"45px\"\n             /></button>}\n    </li>\n}","import {Alert} from \"./Alert\";\nimport \"./ChangeCollectionAlert.css\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {CollectionsRow} from \"./CollectionsRow\";\nimport addIcon from \"./icons/add-icon.png\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nexport function ChangeCollectionAlert(props) {\n    // store as state so not reloading list in background when choosing\n    let [selectedCollection, setSelectedCollection] = useState(props.collection);\n    let [newName, setNewName] = useState(\"\");\n    let [edited, setEdited] = useState(false);\n    const nameInput = useRef(null);\n\n    useEffect(() => {\n        if (edited) {\n            nameInput.current.focus();\n            nameInput.current.scrollIntoView();\n        }\n    }, [edited])\n\n\n    return (\n\n        <Alert onClose={props.onClose} onOK={() => props.onOK(selectedCollection)}\n               modalClassName=\"change-collection-modal\"\n               deleteAlert={false}\n               middleIcon={<img src={addIcon} alt=\"cancel\" width=\"45px\" height=\"45px\"/>}\n               middleIconOnClick={() => setEdited(true)}\n        >\n            <div>\n                <div className={\"center-text\"}>{`Which list would you like to view?`}</div>\n                <ul id={\"collections-list\"}>\n                    {props.collections.map((c) => <CollectionsRow key={c} setSelectedCollection={setSelectedCollection}\n\n                                                                  selected={selectedCollection === c} name={c}\n\n                                                                  onDelete={() => props.onCollectionsDeleted(c)}/>)\n\n                    }\n                </ul>\n                {edited &&\n                <TextareaAutosize key={\"edit\"} value={newName} ref={nameInput}\n                                  onChange={(e) => setNewName(e.target.value)}\n                                  onKeyPress={(e) => {\n                                      if (e.key === \"Enter\") {\n                                          e.stopPropagation();\n                                          nameInput.current.blur();\n                                      }\n                                  }}\n                                  onBlur={(e) => {\n                                      setEdited(false);\n                                      if (newName === \"\") {\n                                          props.onCollectionsAdded(\"Untitled\");\n                                          setSelectedCollection(\"Untitled\");\n                                      } else {\n                                          props.onCollectionsAdded(newName);\n                                          setSelectedCollection(newName);\n                                      }\n\n                                  }}\n                />}\n\n            </div>\n        </Alert>);\n}\n","export default __webpack_public_path__ + \"static/media/sort-icon.79aeb5e0.png\";","export default __webpack_public_path__ + \"static/media/sort-complete-icon.9777492c.png\";","import './SortBar.css';\nimport {useState} from \"react\";\nimport sortIcon from \"./icons/sort-icon.png\";\nimport sortCompleteIcon from \"./icons/sort-complete-icon.png\";\n\nexport function SortBar(props) {\n    const [sorting, setSorting] = useState(false);\n    const [sortString, sortDirection] = props.sortOptions;\n\n    const imgSize = \"40px\";\n    return <div id={\"sort-bar\"} tabIndex={0}>\n        {sorting && <button onClick={() => props.setSortOptions([sortString, sortDirection === \"asc\" ? \"desc\": \"asc\"])} aria-label={\"Toggle Sort Direction; Current Sort direction, \" + sortDirection + \"ending\"}><div className={\"current-sort\"}>{sortDirection === \"asc\" ? \"↑\" : \"↓\"}</div></button>}\n        {sorting &&\n        [\"created\", \"name\", \"priority\"].map((s) => <button key={s} onClick={()=>props.setSortOptions([s, sortDirection])} aria-label={sortString === s ? \"Current Sort Method; Method, \" + s : \"Change Sort Method; Method, \" + s}><div id={s}\n                                                                    className={sortString === s ? \"current-sort\" : \"\"}>{s}</div></button>)}\n        <button onClick={() => setSorting(!sorting)} aria-label={sorting ? \"Close sort menu\" : \"open sort menu\"}><img src={sorting ? sortCompleteIcon : sortIcon} alt=\"sort\" width={imgSize} height={imgSize}\n            /></button>\n    </div>\n}","import {useMediaQuery} from 'react-responsive';\n\nimport \"./App.css\";\nimport {TaskList} from \"./TaskList\";\nimport {Header} from \"./Header\";\nimport {Footer} from \"./Footer\";\nimport {DeleteAllAlert} from \"./DeleteAllAlert\";\nimport {DeleteTaskAlert} from \"./DeleteTaskAlert\";\nimport {ChangeCollectionAlert} from \"./ChangeCollectionAlert\";\nimport {useState} from \"react\";\nimport {SortBar} from \"./SortBar\";\n\nfunction App(props) {\n    const isDesktopOrLaptop = useMediaQuery({\n        query: '(min-width: 1225px)'\n    })\n    const isTabletOrMobile = useMediaQuery({query: '(max-width: 1224px)'})\n\n    const [onlyIncomplete, setOnlyIncomplete] = useState(false);\n    const [editedItem, setEditedItem] = useState(null);\n    const [deleteAllAlert, setDeleteAllAlert] = useState(false);\n    const [deleteTaskAlert, setDeleteTaskAlert] = useState(null);\n    const [changeCollectionAlert, setChangeCollectionAlert] = useState(false);\n\n    function deleteAllCompleted() {\n        props.onItemsDeleted(props.tasks.filter(\n            task => task.completed\n        ).map(task => task.id))\n    }\n\n    function addTask() {\n        const id = props.onItemAdded();\n        setEditedItem(id);\n    }\n\n    const footer = <Footer onlyIncomplete={onlyIncomplete} setOnlyIncomplete={setOnlyIncomplete}\n                           deleteAllCompleted={() => setDeleteAllAlert(!deleteAllAlert)} addTask={addTask}/>;\n\n    return (\n        <div className=\"App\">\n            <div className={\"main-app\"}>\n                <Header title={props.collection} onClick={() => setChangeCollectionAlert(true)}/>\n                {isDesktopOrLaptop && footer}\n                <SortBar sortOptions={props.sortOptions} setSortOptions={props.setSortOptions}/>\n                <TaskList tasks={props.tasks} onlyIncomplete={onlyIncomplete}\n                          toggleTaskAsComplete={(id, value) => props.onItemChanged(id, \"completed\", value)}\n                          deleteTask={(task) => setDeleteTaskAlert(task)}\n                          editPriority={(id, value) => props.onItemChanged(id, \"priority\", value)}\n                          editTaskName={(id, value) => props.onItemChanged(id, \"name\", value)} setEdit={setEditedItem}\n                          editedItem={editedItem} resetEditedItem={() => setEditedItem(null)}/>\n                {isTabletOrMobile && footer}\n            </div>\n            {deleteAllAlert && <DeleteAllAlert onClose={() => setDeleteAllAlert(false)} onOK={deleteAllCompleted}\n                                               tasksNumber={props.tasks.length}\n                                               completedTasksNumber={props.tasks.filter((task) => (task.completed)).length}/>}\n            {\n                deleteTaskAlert && <DeleteTaskAlert onClose={() => setDeleteTaskAlert(null)}\n                                                    onOK={() => props.onItemsDeleted([deleteTaskAlert.id])}\n                                                    name={deleteTaskAlert.name}/>\n            }\n            {\n                changeCollectionAlert && <ChangeCollectionAlert onClose={() => setChangeCollectionAlert(null)}\n                                                                onOK={props.setCollection} collection={props.collection}\n                                                                onCollectionsAdded={props.onCollectionsAdded}\n                                                                onCollectionsDeleted={props.onCollectionsDeleted}\n                                                                collections={props.collections}/>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import App from \"./App.js\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {useState} from \"react\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAqjBv9F9MnhkTPQeRghfLj06E8iJVh0lg\",\n    authDomain: \"list-of-tasks-281cc.firebaseapp.com\",\n    projectId: \"list-of-tasks-281cc\",\n    storageBucket: \"list-of-tasks-281cc.appspot.com\",\n    messagingSenderId: \"319211842925\",\n    appId: \"1:319211842925:web:78baa57a16f2989eac3e64\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nexport function FirestoreApp(props) {\n    const [collections, setCollections] = useState([\"Tasks\"]);\n    const [collection, setCollection] = useState(\"Tasks\");\n    const [sortOptions, setSortOptions] = useState([\"priority\", \"desc\"]);\n    const [sortString, sortDirection] = sortOptions;\n    const query = db.collection(collection).orderBy(sortString, sortDirection);\n    const [value, loading, error] = useCollection(query);\n\n    function onCollectionsAdded(name) {\n        setCollections([...collections, name]);\n    }\n\n    function onItemChanged(taskId, property, newValue) {\n        db.collection(collection).doc(taskId).update({[property]: newValue});\n    }\n\n    function onItemAdded() {\n        const id = generateUniqueID();\n        db.collection(collection).doc(id).set(\n            {\n                id: id,\n                name: \"\",\n                completed: false,\n                priority: 2,\n                created: firebase.database.ServerValue.TIMESTAMP\n            }\n        )\n        return id;\n    }\n\n\n    function onItemsDeleted(ids) {\n        const col = db.collection(collection);\n        ids.forEach(id => col.doc(id).delete());\n    }\n\n    const taskData = loading ? loading : value.docs.map((doc) => doc.data());\n\n    async function onCollectionsDeleted(name) {\n        setCollections(collections.filter((c) => c !== name));\n    }\n\n    return <App setCollection={setCollection} collection={collection} tasks={taskData} sortOptions={sortOptions}\n                setSortOptions={setSortOptions} onItemChanged={onItemChanged} onItemAdded={onItemAdded}\n                onItemsDeleted={onItemsDeleted}\n                onCollectionsAdded={onCollectionsAdded}\n                onCollectionsDeleted={onCollectionsDeleted}\n                collections={collections}\n    />\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {FirestoreApp} from \"./FirestoreApp\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirestoreApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}